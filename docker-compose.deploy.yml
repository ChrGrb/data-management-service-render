version: "3"
services:
  strapi:
    container_name: tum4health_cms
    image: philippzagar/tum4health_cms:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
      VIRTUAL_HOST: zagar.dev
      VIRTUAL_PORT: 1337
      LETSENCRYPT_HOST: zagar.dev
      LETSENCRYPT_EMAIL: p@zagar.dev
    links:
      - postgres:postgres
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14.2-alpine
    container_name: postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${DATABASE_NAME} -U $${DATABASE_USERNAME}"
        ]
      interval: 3s
      timeout: 3s
      retries: 5
    networks:
      - strapi

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      ENABLE_IPV6: true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    depends_on:
      - strapi
    networks:
      - strapi

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: unless-stopped
    environment:
      - DEFAULT_EMAIL=p@zagar.dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme:/etc/acme.sh
    volumes_from:
      - nginx-proxy:rw
    depends_on:
      - nginx-proxy
    networks:
      - strapi

networks:
  strapi:
    driver: bridge
